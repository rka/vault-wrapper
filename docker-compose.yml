version: '3.9'

services:
  vault:
    image: hashicorp/vault:1.15.4  # Specify the latest version explicitly
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    command: server -dev -dev-root-token-id=root  # Use dev mode for simplicity
    volumes:
      - ./vault-data:/vault/data  # Persistent data storage for Vault

  initializer:
    image: hashicorp/vault:1.15.4
    container_name: vault_initializer
    depends_on:
      - vault
    volumes:
      - ./vault-init:/vault  # Volume to store initialization secrets
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      VAULT_ADDR=http://vault:8200 &&
      vault operator init -key-shares=1 -key-threshold=1 > /vault/init-output.txt &&
      vault operator unseal $(awk '/Unseal Key 1:/ {print $NF}' /vault/init-output.txt) &&
      export ROOT_TOKEN=$(awk '/Initial Root Token:/ {print $NF}' /vault/init-output.txt) &&
      vault login $ROOT_TOKEN &&
      vault auth enable approle &&
      vault write auth/approle/role/my-role token_policies=\"default\" &&
      vault read -field=role_id auth/approle/role/my-role/role-id > /vault/role_id &&
      vault write -f auth/approle/role/my-role/secret-id | awk '/secret_id/ {print $2}' > /vault/secret_id &&
      echo 'Initialization complete'
      "

  backend:
    image: your-backend-image:latest  # Replace with the actual backend image
    container_name: backend
    depends_on:
      - initializer
    environment:
      VAULT_ADDR: "http://vault:8200"
    build:
      context: ./backend  # Adjust to the location of your backend Dockerfile
    entrypoint: >
      /bin/sh -c "
      ROLE_ID=$(cat /vault/role_id) &&
      SECRET_ID=$(cat /vault/secret_id) &&
      echo \"Using ROLE_ID=$ROLE_ID and SECRET_ID=$SECRET_ID\" &&
      ./backend-binary"
    volumes:
      - ./vault-init:/vault  # Access the ROLE_ID and SECRET_ID generated by initializer

  frontend:
    image: your-frontend-image:latest  # Replace with the actual frontend image
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"  # Adjust to your frontend port
    environment:
      API_URL: "http://backend:8080"  # URL of your backend service (replace with actual)
    build:
      context: ./frontend  # Adjust to the location of your frontend Dockerfile
    entrypoint: >
      /bin/sh -c "
      echo \"Frontend is running...\" &&
      ./frontend-binary"
    volumes:
      - ./frontend:/frontend  # Adjust as needed

  app:
    image: your-app-image:latest  # Replace with your actual app image
    container_name: app
    depends_on:
      - backend
      - frontend
    environment:
      VAULT_ADDR: "http://vault:8200"
    build:
      context: ./app  # Adjust to the location of your app's Dockerfile
    entrypoint: >
      /bin/sh -c "
      ROLE_ID=$(cat /vault/role_id) &&
      SECRET_ID=$(cat /vault/secret_id) &&
      echo \"Using ROLE_ID=$ROLE_ID and SECRET_ID=$SECRET_ID\" &&
      ./your-app-binary"
    volumes:
      - ./vault-init:/vault  # Access the ROLE_ID and SECRET_ID generated by initializer
